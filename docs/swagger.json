{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API service for subscribing, confirming, and unsubscribing weather notifications.\nLocal Dev Host - localhost:8090\nProduction - weather-subscription-api-production-9648.up.railway.app",
        "title": "Weather Subscription API",
        "contact": {
            "email": "support@example.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8090",
    "basePath": "/",
    "paths": {
        "/confirm/{token}": {
            "get": {
                "description": "Confirms a subscription using the token sent via confirmation email.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscription"
                ],
                "summary": "Confirm email subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Confirmation token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription confirmed successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Token not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/subscribe": {
            "post": {
                "description": "Subscribe an email to receive weather updates for a specific city with chosen frequency.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscription"
                ],
                "summary": "Subscribe to weather updates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address to subscribe",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "City for weather updates",
                        "name": "city",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "hourly",
                            "daily"
                        ],
                        "type": "string",
                        "description": "Frequency of updates (hourly or daily)",
                        "name": "frequency",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription successful. Confirmation email sent.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Email already subscribed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/unsubscribe/{token}": {
            "get": {
                "description": "Unsubscribes an email from weather updates using the token sent in emails.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscription"
                ],
                "summary": "Unsubscribe from weather updates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unsubscribe token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unsubscribed successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Token not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/weather": {
            "get": {
                "description": "Retrieves the current weather information for a specified city.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Weather"
                ],
                "summary": "Get current weather",
                "parameters": [
                    {
                        "type": "string",
                        "description": "City name for weather forecast",
                        "name": "city",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Weather data returned successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.WeatherDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "City not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.WeatherDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "humidity": {
                    "type": "integer"
                },
                "temperature": {
                    "type": "integer"
                }
            }
        }
    }
}