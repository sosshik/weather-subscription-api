basePath: /
definitions:
  dto.WeatherDTO:
    properties:
      description:
        type: string
      humidity:
        type: integer
      temperature:
        type: integer
    type: object
host: localhost:8090
info:
  contact:
    email: support@example.com
  description: |-
    API service for subscribing, confirming, and unsubscribing weather notifications.
    Local Dev Host - localhost:8090
    Production - weather-subscription-api-production-9648.up.railway.app
  title: Weather Subscription API
  version: "1.0"
paths:
  /confirm/{token}:
    get:
      description: Confirms a subscription using the token sent via confirmation email.
      parameters:
      - description: Confirmation token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Subscription confirmed successfully
          schema:
            type: string
        "400":
          description: Invalid token
          schema:
            type: string
        "404":
          description: Token not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Confirm email subscription
      tags:
      - Subscription
  /subscribe:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Subscribe an email to receive weather updates for a specific city
        with chosen frequency.
      parameters:
      - description: Email address to subscribe
        in: formData
        name: email
        required: true
        type: string
      - description: City for weather updates
        in: formData
        name: city
        required: true
        type: string
      - description: Frequency of updates (hourly or daily)
        enum:
        - hourly
        - daily
        in: formData
        name: frequency
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Subscription successful. Confirmation email sent.
          schema:
            type: string
        "400":
          description: Invalid input
          schema:
            type: string
        "409":
          description: Email already subscribed
          schema:
            type: string
      summary: Subscribe to weather updates
      tags:
      - Subscription
  /unsubscribe/{token}:
    get:
      description: Unsubscribes an email from weather updates using the token sent
        in emails.
      parameters:
      - description: Unsubscribe token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Unsubscribed successfully
          schema:
            type: string
        "400":
          description: Invalid token
          schema:
            type: string
        "404":
          description: Token not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Unsubscribe from weather updates
      tags:
      - Subscription
  /weather:
    get:
      consumes:
      - application/json
      description: Retrieves the current weather information for a specified city.
      parameters:
      - description: City name for weather forecast
        in: query
        name: city
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Weather data returned successfully
          schema:
            $ref: '#/definitions/dto.WeatherDTO'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: City not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get current weather
      tags:
      - Weather
schemes:
- http
- https
swagger: "2.0"
